# بررسی امنیت وابستگی‌ها در Pull Requestها
name: 'Dependency Review'
on: [pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3
        with:
          # تنظیمات سختگیرانه برای آسیب‌پذیری‌های حیاتی
          fail-on-severity: critical
          
          # بررسی لایسنس‌های مجاز
          deny-licenses: |
            AGPL-1.0
            AGPL-3.0
            GPL-2.0
            GPL-3.0
          
          # تنظیمات اضافی برای بررسی دقیق‌تر
          config-file: '.github/dependency-review-config.yml'
          
          # گزارش‌دهی به صورت comment در PR
          comment-summary-in-pr: true

      # بررسی وابستگی‌های Go
      - name: 'Setup Go'
        if: hashFiles('go.mod') != ''
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: 'Check Go Dependencies'
        if: hashFiles('go.mod') != ''
        run: |
          cd backend
          go mod verify
          go list -m all > go.list
          
      # بررسی وابستگی‌های Node.js
      - name: 'Setup Node.js'
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: 'Check NPM Dependencies'
        if: hashFiles('package.json') != ''
        run: |
          cd frontend
          npm audit
          
      # گزارش نتایج
      - name: 'Dependency Report'
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `## نتایج بررسی وابستگی‌ها
            
            ### وضعیت کلی
            - 🔍 بررسی انجام شده در: ${new Date().toISOString()}
            - 📦 بررسی وابستگی‌های Go
            - 📦 بررسی وابستگی‌های Node.js
            
            لطفاً قبل از merge، همه هشدارهای امنیتی را بررسی کنید.`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
